--create database goru;

---- TIPO DE TELEFONO
drop table if exists tipo_telefono;

create table tipo_telefono (
	ID int not null,
	nombre varchar(50) null,
	activo boolean null
);

alter table tipo_telefono
add constraint PK_tipo_telefono
primary key (ID);

alter table tipo_telefono
alter column ID
add generated by default as identity; --(start with 1 increment by 1)

--alter sequence tipo_telefono_id_seq with 1


---- TIPO DE DIRECCION
drop table if exists tipo_direccion;

create table tipo_direccion (
	ID int not null,
	nombre varchar(50) null,
	activo boolean null
);

alter table tipo_direccion
add constraint PK_tipo_direccion
primary key (ID);

alter table tipo_direccion
alter column ID
add generated by default as identity;


---- PERSONA
drop table if exists persona;

create table persona (
	ID int not null,
	tipo_identificacion varchar(30) null,
	nombre varchar(100) null,
	apellido varchar(100) null,
	fecha_nacimiento timestamp null,
	fecha_creacion timestamp null,
	activo boolean null
);

alter table persona
add constraint PK_persona
primary key (ID);

alter table persona
alter column ID
add generated by default as identity;


---- CONTACTO TELEFONICO
drop table if exists contacto_telefonico;

create table contacto_telefonico (
	ID int not null,
	persona int null,
	tipo_telefono int null,
	fecha_creacion timestamp null
);

alter table contacto_telefonico
add constraint PF_contacto_telefonico
primary key (ID);

alter table contacto_telefonico
alter column ID
add generated by default as identity; 

alter table contacto_telefonico
add constraint FK_contacto_telefonico_persona
foreign key (persona)
references persona(ID);

alter table contacto_telefonico
add constraint FK_contacto_telefonico_tipo_telefono
foreign key (tipo_telefono)
references tipo_telefono(ID);


---- DIRECCION
drop table if exists direccion;

create table direccion (
	ID int not null,
	persona int null,
	tipo_direccion int null,
	ciudad int null,
	calle_principal varchar(300) null,
	calle_secundaria varchar(300) null
);

alter table direccion 
add constraint PK_direccion
primary key (ID);

alter table direccion
alter column ID
add generated by default as identity;

alter table direccion
add constraint FK_direccion_persona
foreign key (persona)
references persona(ID);

alter table direccion
add constraint FK_direccion_tipo_direccion
foreign key (tipo_direccion)
references tipo_direccion(ID);


---- DIRECTOR PROYECTO
drop table if exists director_proyecto;

create table director_proyecto (
	ID int not null,
	persona int null,
	fecha_creacion timestamp null,
	activo boolean null
);

alter table director_proyecto
add constraint PK_director_proyecto 
primary key (ID);

alter table director_proyecto
alter column ID
add generated by default as identity;

alter table director_proyecto
add constraint FK_director_proyecto_persona
foreign key (persona)
references persona(ID);



----- PATROCINADOR
drop table if exists patrocinador;

create table patrocinador (
	ID int not null,
	persona int null,
	fecha_creacion timestamp null,
	activo boolean null
);

alter table patrocinador
add constraint PK_patrocinador
primary key (ID);

alter table patrocinador
alter column ID
add generated by default as identity;

alter table patrocinador
add constraint FK_patrocinador_persona
foreign key (persona)
references persona(ID);


---- DEPARTAMENTO
drop table if exists departamento;

create table departamento (
	ID int not null,
	nombre varchar(50) null,
	abrevacion varchar(15) null,
	activo boolean null
);

alter table departamento
add constraint PK_DEPARTAMENTO
primary key (ID);

alter table departamento
alter column ID
add generated by default as identity;



----- EMPRESA
drop table if exists empresa;

create table empresa (
	ID int not null,
	tipo_identificacion varchar(15) null,
	identificacion varchar(13) null,
	nombre varchar(50) null,
	activo boolean null
);

alter table empresa
add constraint PK_empresa
primary key (ID);

alter table empresa
alter column ID
add generated by default as identity;


----- ORGANIGRAMA
drop table if exists organigrama;

create table organigrama (
	ID int not null,
	empresa int null,
	departamento int null
);

alter table organigrama
add constraint PK_organigrama
primary key (ID);

alter table organigrama
alter column ID
add generated by default as identity;

alter table organigrama
add constraint FK_organigrama_empresa
foreign key (empresa)
references empresa(ID);

alter table organigrama
add constraint FK_organigrama_departamento
foreign key (departamento)
references departamento(ID);

---- TIPO DE PROYECTO
drop table if exists tipo_proyecto;

create table tipo_proyecto (
	ID int not null,
	nombre varchar(50) null,
	descripcion text null,
	activo boolean null
);

alter table tipo_proyecto
add constraint PK_tipo_proyecto
primary key (ID);

alter table tipo_proyecto
alter column ID
add generated by default as identity;


---- PROYECTO
drop table if exists proyecto;

create table proyecto (
	ID int not null,
	tipo_proyecto int null,
	numero int null,
	nombre varchar(100) null,
	director int null,
	patrocinador int null,
	empresa int null,
	departamento int null,
	informacion text null,
	fecha_creacion timestamp null,
	activo boolean null
);


alter table proyecto
add constraint PK_proyecto
primary key (ID);

alter table proyecto
alter column ID
add generated by default as identity;


-------------------------------------
------ TIPO DE EVALUACION
drop table if exists tipo_evaluacion;

create table tipo_evaluacion (
	ID int not null,
	nombre varchar(50) null,
	activo boolean null
);

alter table tipo_evaluacion 
add constraint PK_tipo_evaluacion
primary key (ID);

alter table tipo_evaluacion
alter column ID
add generated by default as identity;


------ CRITERIO
drop table if exists criterio;

create table criterio (
	ID int not null,
	tipo_evaluacion int null,
	criterio varchar(300) null,
	orden int null,
	peso_limite numeric(4,2) null,
	activo boolean null
);

alter table criterio
add constraint PK_criterio
primary key (ID);

alter table criterio
alter column ID
add generated by default as identity;

alter table criterio
add constraint FK_criterio_tipo_evaluacion
foreign key (tipo_evaluacion)
references tipo_evaluacion(ID);

------- OPCION
drop table if exists opcion;

create table opcion (
	ID int not null,
	criterio int null,
	descripcion varchar(500) null,
	orden int null,
	puntos numeric(4,2) null,
	activo boolean null
);


alter table opcion 
add constraint PK_opcion
primary key (ID);

alter table opcion
alter column ID
add generated by default as identity;

alter table opcion
add constraint FK_opcion_criterio
foreign key (criterio)
references criterio(ID);


-----------------------------------------------------
---------- NIVEL DE PERMISO
drop table if exists nivel_permiso;

create table nivel_permiso(
	ID int not null,
	nombre varchar(50) null,
	abreviatura varchar(15) null,
	activo boolean null
);

alter table nivel_permiso
add constraint PK_nivel_permiso
primary key (ID);

alter table nivel_permiso
alter column ID
add generated by default as identity;


--------- TIPO DE LICENCIA
drop table if exists tipo_licencia;

create table tipo_licencia(
	ID int not null,
	nombre varchar(100) null,
	descripcion varchar(300) null,
	nivel_permiso int null,
	activo boolean null
);

alter table tipo_licencia
add constraint PK_tipo_licencia
primary key (ID);

alter table tipo_licencia
alter column ID
add generated by default as identity;

alter table tipo_licencia
add constraint FK_tipo_licenica_nivel_permiso
foreign  key (nivel_permiso)
references nivel_permiso(ID);


-------- MENU
drop table if exists menu;

create table menu(
	ID int not null,
	nombre varchar(50) null,
	menu_padre int null,
	activo boolean null
);

alter table menu
add constraint FK_menu
primary key (ID);

alter table menu
alter column ID
add generated by default as identity;

alter table menu
add constraint FK_menu_menu
foreign key (menu_padre)
references menu(ID);


------ PERMISOS POR LICENCIA
drop table if exists permiso_licencia;

create table permiso_licencia(
	ID int not null,
	tipo_licencia int null,
	menu int null,
	fecha_creacion timestamp null
);

alter table permiso_licencia
add constraint PK_permiso_licencia
primary key (ID);

alter table permiso_licencia
alter column ID
add generated by default as identity;

alter table permiso_licencia
add constraint FK_permiso_licencia_tipo_licencia
foreign key (tipo_licencia)
references tipo_licencia(ID);


------ USUARIO
drop table if exists usuario;

create table usuario(
	ID int not null,
	empresa int null,
	persona int null,
	tipo_licencia int null,
	username varchar(30) null,
	clave varchar(60) null,
	nivel_permiso int null,
	suspendido boolean null,
	eliminado boolean null,
	fecha_creacion timestamp null,
	ultima_sesion timestamp null,
	fecha_suspension timestamp null,
	fecha_eliminacion timestamp null,
	fecha_limite_licencia timestamp null
);

alter table usuario 
add constraint PK_usauario
primary key (ID);

alter table usuario
alter column ID
add generated by default as identity;

alter table usuario
add constraint FK_usuario_empresa
foreign key (empresa)
references empresa(ID);

alter table usuario
add constraint FK_usuario_persona
foreign key (persona)
references persona(ID);

alter table usuario
add constraint FK_usuario_tipo_licencia
foreign key (tipo_licencia)
references tipo_licencia(ID);

alter table usuario
add constraint FK_usuario_nivel_permiso
foreign key (nivel_permiso)
references nivel_permiso(ID);


------ PERMISOS POR USUARIO
drop table if exists permiso_usuario;

create table permiso_usuario(
	ID int not null,
	usuario int null,
	menu int null,
	fecha_creacion timestamp null
);

alter table permiso_usuario
add constraint PK_permiso_usuario
primary key (ID);

alter table permiso_usuario
alter column ID
add generated by default as identity;

alter table permiso_usuario
add constraint FK_permiso_usuario_usuario
foreign key (usuario)
references usuario(ID);



----- EVALUACION
drop table if exists evaluacion;

create table evaluacion (
	ID int not null,
	tipo_evaluacion int null,
	proyecto int null,
	usuario varchar(100) null, ----- USUARIO ID
	fecha_creacion timestamp null,
	fecha_modificacion timestamp null,
	puntaje_total numeric(4,2) null,
	peso_total numeric(4, 2) null
);

alter table evaluacion
add constraint PK_evaluacion
primary key (ID);

alter table evaluacion
alter column ID
add generated by default as identity;

alter table evaluacion
add constraint FK_evaluacion_tipo_evaluacion
foreign key (tipo_evaluacion)
references tipo_evaluacion(ID);

alter table evaluacion
add constraint FK_evaluacion_proyecto
foreign key (proyecto)
references proyecto(ID);

------ DETALLE DE LA EVALUACION
drop table if exists evaluacion_detalle;

create table evaluacion_detalle (
	ID int not null,
	evaluacion int null,
	criterio int null,
	puntaje numeric(4,2) null,
	peso_obtenido numeric(4, 2) null,
	peso_limite numeric(4, 2) null
);

alter table evaluacion_detalle
add constraint PK_evaluacion_detalle
primary key (ID);

alter table evaluacion_detalle
alter column ID
add generated by default as identity;

alter table evaluacion_detalle
add constraint FK_evaluacion_detalle_evaluacion
foreign key (evaluacion)
references evaluacion(ID);

alter table evaluacion_detalle
add constraint FK_evaluacion_criterio
foreign key (criterio)
references criterio(ID);


----------------------------------------------
------ CONFIGURATION
drop table if exists configuration;

create table configuration (
	ID int null,
	valor varchar(100) null,
	posible_valores varchar(100) null,
	activo boolean null
);

alter table "configuration"
add constraint Pk_configuration
primary key (ID);

alter table "configuration" 
alter column ID
add generated by default as identity;

----------------------------------------
------ PRODUCTO
drop table if exists producto;

create table producto(
	ID int not null,
	tipo_licencia int null,
	nivel_permiso int null,
	pvp_antes_impuestos numeric(6,2) null,
	iva numeric(5,2) null,
	pvp_con_impuestos numeric(6,2) null,
	activo boolean null
);

alter table producto
add constraint PK_producto
primary key (ID);

alter table producto
alter column ID
add generated by default as identity;



------ EMPRESA STOCK
drop table if exists empresa_stock;

create table empresa_stock(
	ID int not null,
	empresa int null,
	producto int null,
	tipo_licencia int null,
	nivel_permiso int null,
	cantidad int null,
	en_uso int null,
	disponibles int null
);

alter table empresa_stock
add constraint PK_empresa_stock
primary key (ID);

alter table empresa_stock
alter column ID
add generated by default as identity;

alter table empresa_stock
add constraint FK_empresa_stock_empresa
foreign key (empresa)
references empresa(ID);

alter table empresa_stock
add constraint FK_empresa_stock_producto
foreign key (producto)
references producto(ID);

alter table empresa_stock
add constraint FK_empresa_stock_tipo_licencia
foreign key (tipo_licencia)
references tipo_licencia(ID);

alter table empresa_stock
add constraint FK_empresa_stock_nivel_permiso
foreign key (nivel_permiso)
references nivel_permiso(ID);



------ FORMA DE PAGO
drop table if exists forma_pago;

create table forma_pago(
	ID int not null,
	nombre varchar(50) null,
	activo boolean null
);

alter table forma_pago
add constraint PK_forma_pago
primary key (ID);

alter table forma_pago
alter column ID
add generated by default as identity;



------ COMPRA
drop table if exists compra;

create table compra(
	ID int not null,
	empresa int null,
	usuario int null,
	fecha_compra timestamp null,
	activo boolean null
);

alter table compra
add constraint PK_compra
primary key (ID);

alter table compra
alter column ID
add generated by default as identity;

alter table compra
add constraint FK_compra_empresa
foreign key (empresa)
references empresa(ID);

alter table compra
add constraint FK_compra_usuario
foreign key (usuario)
references usuario(ID);


------ COMPRA TOTAL
drop table if exists compra_total;

create table compra_total(
	ID int null,
	compra int null,
	subtotal_antes_descuentos numeric(6,2) null,
	descuento numeric(6,2) null,
	subtotal_antes_impuestos numeric(6, 2) null,
	iva numeric(6, 2) null,
	total numeric(6,2) null
);

alter table compra_total
add constraint PK_compra_total
primary key (ID);

alter table compra_total
alter column ID
add generated by default as identity;

alter table compra_total
add constraint FK_compra_total_compra
foreign key (compra)
references compra(ID);


------ PAGO
drop table if exists pago;

create table pago(
	ID int not null,
	compra int null,
	forma_pago int null,
	valor numeric(6,2) null,
	referencia varchar(50) null
);

alter table pago
add constraint PK_pago
primary key (ID);

alter table pago
alter column ID
add generated by default as identity;

alter table pago
add constraint FK_pago_compra
foreign key (compra)
references compra(ID);

alter table pago
add constraint FK_pago_forma_pago
foreign key (forma_pago)
references forma_pago(ID);


------ DETALLE COMPRA
drop table if exists detalle_compra;

create table detalle_compra (
	ID int not null,
	compra int null,
	producto int null,
	cantidad int null,
	pvp_antes_impuestos numeric(6,2) null,
	pvp_con_impuestos numeric(6,2) null,
	subtotal_antes_descuentos numeric(6,2) null,
	descuento numeric(6,2) null,
	subtotal_antes_impuestos numeric(6,2) null,
	iva numeric(6,2) null,
	subtotal numeric(6,2) null
);

alter table detalle_compra
add constraint PK_detalle_compra
primary key (ID);

alter table detalle_compra
alter column ID
add generated by default as identity;

alter table detalle_compra
add constraint FK_detalle_compra_compra
foreign key (compra)
references compra(ID);

alter table detalle_compra
add constraint FK_detalle_compra_producto
foreign key (producto)
references producto(ID);



